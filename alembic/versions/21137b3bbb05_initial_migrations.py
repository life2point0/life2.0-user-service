"""Initial Migrations

Revision ID: 21137b3bbb05
Revises: bc616c6e5620
Create Date: 2023-11-16 23:53:22.007698

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = '21137b3bbb05'
down_revision: Union[str, None] = 'bc616c6e5620'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('folder', sa.String(), nullable=True),
    sa.Column('file_extension', sa.String(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('bucket', sa.String(), nullable=False),
    sa.Column('cdn_host', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk__files__id')
    )
    op.create_table('interests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', postgresql.CITEXT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk__interests__id'),
    sa.UniqueConstraint('id', name='uq__interests__id'),
    sa.UniqueConstraint('name', name='uq__interests__name')
    )
    op.create_table('languages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', postgresql.CITEXT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk__languages__id'),
    sa.UniqueConstraint('id', name='uq__languages__id'),
    sa.UniqueConstraint('name', name='uq__languages__name')
    )
    op.create_table('occupations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', postgresql.CITEXT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk__occupations__id'),
    sa.UniqueConstraint('id', name='uq__occupations__id'),
    sa.UniqueConstraint('name', name='uq__occupations__name')
    )
    op.create_table('places',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('google_place_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('geolocation', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('additional_details', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('google_place_id', name='uq__places__google_place_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', postgresql.CITEXT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk__skills__id'),
    sa.UniqueConstraint('id', name='uq__skills__id'),
    sa.UniqueConstraint('name', name='uq__skills__name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_country_code', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('place_of_origin_id', sa.UUID(), nullable=True),
    sa.Column('current_place_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['current_place_id'], ['places.id'], name='fk__users__current_place_id'),
    sa.ForeignKeyConstraint(['place_of_origin_id'], ['places.id'], name='fk__users__place_of_origin_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_interests',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('interest_id', sa.UUID(), nullable=False),
    sa.Column('user_preferred_sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], name='fk__user_interests.interest_id__interests.id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk__user_interests.user_id__users.id'),
    sa.PrimaryKeyConstraint('user_id', 'interest_id', name='pk__user_interests__user_id__interest_id')
    )
    op.create_table('user_languages',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.UUID(), nullable=False),
    sa.Column('user_preferred_sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], name='fk__user_languages.language_id__languages.id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk__user_languages.user_id__users.id'),
    sa.PrimaryKeyConstraint('user_id', 'language_id', name='pk__user_languages__user_id__language_id')
    )
    op.create_table('user_occupations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('occupation_id', sa.UUID(), nullable=False),
    sa.Column('user_preferred_sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['occupation_id'], ['occupations.id'], name='fk__user_occupations.occupation_id__occupations.id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk__user_occupations.user_id__users.id'),
    sa.PrimaryKeyConstraint('user_id', 'occupation_id', name='pk__user_occupations__user_id__occupation_id')
    )
    op.create_table('user_past_locations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('place_id', sa.UUID(), nullable=False),
    sa.Column('user_preferred_sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], name='fk__user_past_locations.place_id__places.id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk__user_past_locations.user_id__users.id'),
    sa.PrimaryKeyConstraint('user_id', 'place_id', name='pk__user_past_locations__user_id__place_id')
    )
    op.create_table('user_photos',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('photo_id', sa.UUID(), nullable=False),
    sa.Column('user_preferred_sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['photo_id'], ['files.id'], name='fk__user_photos.photo_id__files.id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk__user_photos.user_id__users.id'),
    sa.PrimaryKeyConstraint('user_id', 'photo_id', name='pk__user_photos__user_id__photo_id')
    )
    op.create_table('user_skills',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('user_preferred_sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name='fk__user_skills.skill_id__skills.id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk__user_skills.user_id__users.id'),
    sa.PrimaryKeyConstraint('user_id', 'skill_id', name='pk__user_skills__user_id__skill_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_skills')
    op.drop_table('user_photos')
    op.drop_table('user_past_locations')
    op.drop_table('user_occupations')
    op.drop_table('user_languages')
    op.drop_table('user_interests')
    op.drop_table('users')
    op.drop_table('skills')
    op.drop_index('idx_places_geolocation', table_name='places', postgresql_using='gist')
    op.drop_table('places')
    op.drop_table('occupations')
    op.drop_table('languages')
    op.drop_table('interests')
    op.drop_table('files')
    # ### end Alembic commands ###
